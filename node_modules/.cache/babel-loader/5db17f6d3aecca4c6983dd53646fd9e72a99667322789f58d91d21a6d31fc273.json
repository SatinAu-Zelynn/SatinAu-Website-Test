{"ast":null,"code":"var _jsxFileName = \"D:\\\\SatinAu-Website\\\\Canary\\\\src\\\\components\\\\EmailPopup.jsx\";\nimport React from 'react';\nimport { copyToClipboard } from '../utils/helpers';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EmailPopup = ({\n  show,\n  onClose,\n  onCopySuccess\n}) => {\n  const emails = ['mifanz090820@outlook.com', 'mifanz090820@gmail.com'];\n  const handleCopy = async email => {\n    const success = await copyToClipboard(email);\n    if (success) onCopySuccess(email);\n  };\n  if (!show) return null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"emailOverlay\",\n      className: `overlay ${show ? 'show' : ''}`,\n      onClick: onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"emailPopup\",\n      className: `modal ${show ? 'show' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u8BF7\\u9009\\u62E9\\u90AE\\u7BB1\\u5730\\u5740\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"email-list\",\n        children: emails.map((email, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"email-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleCopy(email),\n            children: \"\\u590D\\u5236\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cancel\",\n          onClick: onClose,\n          children: \"\\u5173\\u95ED\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = EmailPopup;\nexport default EmailPopup;\nvar _c;\n$RefreshReg$(_c, \"EmailPopup\");","map":{"version":3,"names":["React","copyToClipboard","jsxDEV","_jsxDEV","Fragment","_Fragment","EmailPopup","show","onClose","onCopySuccess","emails","handleCopy","email","success","children","id","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","idx","_c","$RefreshReg$"],"sources":["D:/SatinAu-Website/Canary/src/components/EmailPopup.jsx"],"sourcesContent":["import React from 'react';\nimport { copyToClipboard } from '../utils/helpers';\n\nconst EmailPopup = ({ show, onClose, onCopySuccess }) => {\n  const emails = [\n    'mifanz090820@outlook.com',\n    'mifanz090820@gmail.com'\n  ];\n\n  const handleCopy = async (email) => {\n    const success = await copyToClipboard(email);\n    if (success) onCopySuccess(email);\n  };\n\n  if (!show) return null;\n\n  return (\n    <>\n      <div \n        id=\"emailOverlay\" \n        className={`overlay ${show ? 'show' : ''}`}\n        onClick={onClose}\n      />\n      <div id=\"emailPopup\" className={`modal ${show ? 'show' : ''}`}>\n        <p>请选择邮箱地址</p>\n        <div className=\"email-list\">\n          {emails.map((email, idx) => (\n            <div key={idx} className=\"email-item\">\n              <span>{email}</span>\n              <button onClick={() => handleCopy(email)}>复制</button>\n            </div>\n          ))}\n        </div>\n        <div className=\"actions\">\n          <button className=\"cancel\" onClick={onClose}>关闭</button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default EmailPopup;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnD,MAAMC,UAAU,GAAGA,CAAC;EAAEC,IAAI;EAAEC,OAAO;EAAEC;AAAc,CAAC,KAAK;EACvD,MAAMC,MAAM,GAAG,CACb,0BAA0B,EAC1B,wBAAwB,CACzB;EAED,MAAMC,UAAU,GAAG,MAAOC,KAAK,IAAK;IAClC,MAAMC,OAAO,GAAG,MAAMZ,eAAe,CAACW,KAAK,CAAC;IAC5C,IAAIC,OAAO,EAAEJ,aAAa,CAACG,KAAK,CAAC;EACnC,CAAC;EAED,IAAI,CAACL,IAAI,EAAE,OAAO,IAAI;EAEtB,oBACEJ,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACEX,OAAA;MACEY,EAAE,EAAC,cAAc;MACjBC,SAAS,EAAE,WAAWT,IAAI,GAAG,MAAM,GAAG,EAAE,EAAG;MAC3CU,OAAO,EAAET;IAAQ;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eACFlB,OAAA;MAAKY,EAAE,EAAC,YAAY;MAACC,SAAS,EAAE,SAAST,IAAI,GAAG,MAAM,GAAG,EAAE,EAAG;MAAAO,QAAA,gBAC5DX,OAAA;QAAAW,QAAA,EAAG;MAAO;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACdlB,OAAA;QAAKa,SAAS,EAAC,YAAY;QAAAF,QAAA,EACxBJ,MAAM,CAACY,GAAG,CAAC,CAACV,KAAK,EAAEW,GAAG,kBACrBpB,OAAA;UAAea,SAAS,EAAC,YAAY;UAAAF,QAAA,gBACnCX,OAAA;YAAAW,QAAA,EAAOF;UAAK;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACpBlB,OAAA;YAAQc,OAAO,EAAEA,CAAA,KAAMN,UAAU,CAACC,KAAK,CAAE;YAAAE,QAAA,EAAC;UAAE;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAF7CE,GAAG;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGR,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNlB,OAAA;QAAKa,SAAS,EAAC,SAAS;QAAAF,QAAA,eACtBX,OAAA;UAAQa,SAAS,EAAC,QAAQ;UAACC,OAAO,EAAET,OAAQ;UAAAM,QAAA,EAAC;QAAE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA,eACN,CAAC;AAEP,CAAC;AAACG,EAAA,GApCIlB,UAAU;AAsChB,eAAeA,UAAU;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}